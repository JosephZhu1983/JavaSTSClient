<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kongzhonghd.sts.statistics.dao.ApiDetailLogMapper">
    <resultMap id="BaseResultMap" type="com.kongzhonghd.sts.statistics.model.ApiDetailLog">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="APIID" jdbcType="BIGINT" property="APIID"/>
        <result column="APIKey" jdbcType="VARCHAR" property="APIKey"/>
        <result column="sendRequestTimes" jdbcType="BIGINT" property="sendRequestTimes"/>
        <result column="receiveSuccessResponseTimes" jdbcType="BIGINT" property="receiveSuccessResponseTimes"/>
        <result column="receiveErrorResponseTimes" jdbcType="BIGINT" property="receiveErrorResponseTimes"/>
        <result column="sendRequestThroughput" jdbcType="DOUBLE" property="sendRequestThroughput"/>
        <result column="receiveSuccessResponseThroughput" jdbcType="DOUBLE"
                property="receiveSuccessResponseThroughput"/>
        <result column="receiveErrorResponseThroughput" jdbcType="DOUBLE" property="receiveErrorResponseThroughput"/>
        <result column="largestSendRequestThroughput" jdbcType="DOUBLE" property="largestSendRequestThroughput"/>
        <result column="largestReceiveSuccessResponseThroughput" jdbcType="DOUBLE"
                property="largestReceiveSuccessResponseThroughput"/>
        <result column="largestReceiveErrorResponseThroughput" jdbcType="DOUBLE"
                property="largestReceiveErrorResponseThroughput"/>
        <result column="lastSendRequestTime" jdbcType="TIMESTAMP" property="lastSendRequestTime"/>
        <result column="lastReceiveSuccessResponseTime" jdbcType="TIMESTAMP" property="lastReceiveSuccessResponseTime"/>
        <result column="lastReceiveErrorResponseTime" jdbcType="TIMESTAMP" property="lastReceiveErrorResponseTime"/>
        <result column="averageReceiveSuccessResponseMilliseconds" jdbcType="INTEGER"
                property="averageReceiveSuccessResponseMilliseconds"/>
        <result column="receiveSuccessRequestTimes" jdbcType="BIGINT" property="receiveSuccessRequestTimes"/>
        <result column="receiveErrorRequestTimes" jdbcType="BIGINT" property="receiveErrorRequestTimes"/>
        <result column="sendSuccessResponseTimes" jdbcType="BIGINT" property="sendSuccessResponseTimes"/>
        <result column="sendErrorResponseTimes" jdbcType="BIGINT" property="sendErrorResponseTimes"/>
        <result column="receiveSuccessRequestThroughput" jdbcType="DOUBLE" property="receiveSuccessRequestThroughput"/>
        <result column="receiveErrorRequestThroughput" jdbcType="DOUBLE" property="receiveErrorRequestThroughput"/>
        <result column="sendSuccessResponseThroughput" jdbcType="DOUBLE" property="sendSuccessResponseThroughput"/>
        <result column="sendErrorResponseThroughput" jdbcType="DOUBLE" property="sendErrorResponseThroughput"/>
        <result column="largestReceiveSuccessRequestThroughput" jdbcType="DOUBLE"
                property="largestReceiveSuccessRequestThroughput"/>
        <result column="largestReceiveErrorRequestThroughput" jdbcType="DOUBLE"
                property="largestReceiveErrorRequestThroughput"/>
        <result column="largestSendSuccessResponseThroughput" jdbcType="DOUBLE"
                property="largestSendSuccessResponseThroughput"/>
        <result column="largestSendErrorResponseThroughput" jdbcType="DOUBLE"
                property="largestSendErrorResponseThroughput"/>
        <result column="lastReceiveSuccessRequestTime" jdbcType="TIMESTAMP" property="lastReceiveSuccessRequestTime"/>
        <result column="lastReceiveErrorRequestTime" jdbcType="TIMESTAMP" property="lastReceiveErrorRequestTime"/>
        <result column="lastSendSuccessResponseTime" jdbcType="TIMESTAMP" property="lastSendSuccessResponseTime"/>
        <result column="lastSendErrorResponseTime" jdbcType="TIMESTAMP" property="lastSendErrorResponseTime"/>
        <result column="averageSendSuccessResponseMilliseconds" jdbcType="INTEGER"
                property="averageSendSuccessResponseMilliseconds"/>
        <result column="logtime" jdbcType="TIMESTAMP" property="logtime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        id, APIID, APIKey, sendRequestTimes, receiveSuccessResponseTimes, receiveErrorResponseTimes,
        sendRequestThroughput, receiveSuccessResponseThroughput, receiveErrorResponseThroughput,
        largestSendRequestThroughput, largestReceiveSuccessResponseThroughput, largestReceiveErrorResponseThroughput,
        lastSendRequestTime, lastReceiveSuccessResponseTime, lastReceiveErrorResponseTime,
        averageReceiveSuccessResponseMilliseconds, receiveSuccessRequestTimes, receiveErrorRequestTimes,
        sendSuccessResponseTimes, sendErrorResponseTimes, receiveSuccessRequestThroughput,
        receiveErrorRequestThroughput, sendSuccessResponseThroughput, sendErrorResponseThroughput,
        largestReceiveSuccessRequestThroughput, largestReceiveErrorRequestThroughput,
        largestSendSuccessResponseThroughput,
        largestSendErrorResponseThroughput, lastReceiveSuccessRequestTime, lastReceiveErrorRequestTime,
        lastSendSuccessResponseTime, lastSendErrorResponseTime, averageSendSuccessResponseMilliseconds,
        logtime
    </sql>
    <select id="selectByExample" parameterType="com.kongzhonghd.sts.statistics.model.ApiDetailLogExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tsts_api_performance_detail_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        select
        <include refid="Base_Column_List"/>
        from tsts_api_performance_detail_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        delete from tsts_api_performance_detail_log
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.kongzhonghd.sts.statistics.model.ApiDetailLogExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        delete from tsts_api_performance_detail_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.kongzhonghd.sts.statistics.model.ApiDetailLog">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        insert into tsts_api_performance_detail_log (id, APIID, APIKey,
        sendRequestTimes, receiveSuccessResponseTimes,
        receiveErrorResponseTimes, sendRequestThroughput,
        receiveSuccessResponseThroughput, receiveErrorResponseThroughput,
        largestSendRequestThroughput, largestReceiveSuccessResponseThroughput,
        largestReceiveErrorResponseThroughput, lastSendRequestTime,
        lastReceiveSuccessResponseTime, lastReceiveErrorResponseTime,
        averageReceiveSuccessResponseMilliseconds, receiveSuccessRequestTimes,
        receiveErrorRequestTimes, sendSuccessResponseTimes,
        sendErrorResponseTimes, receiveSuccessRequestThroughput,
        receiveErrorRequestThroughput, sendSuccessResponseThroughput,
        sendErrorResponseThroughput, largestReceiveSuccessRequestThroughput,
        largestReceiveErrorRequestThroughput, largestSendSuccessResponseThroughput,
        largestSendErrorResponseThroughput, lastReceiveSuccessRequestTime,
        lastReceiveErrorRequestTime, lastSendSuccessResponseTime,
        lastSendErrorResponseTime, averageSendSuccessResponseMilliseconds,
        logtime)
        values (#{id,jdbcType=BIGINT}, #{APIID,jdbcType=BIGINT}, #{APIKey,jdbcType=VARCHAR},
        #{sendRequestTimes,jdbcType=BIGINT}, #{receiveSuccessResponseTimes,jdbcType=BIGINT},
        #{receiveErrorResponseTimes,jdbcType=BIGINT}, #{sendRequestThroughput,jdbcType=DOUBLE},
        #{receiveSuccessResponseThroughput,jdbcType=DOUBLE}, #{receiveErrorResponseThroughput,jdbcType=DOUBLE},
        #{largestSendRequestThroughput,jdbcType=DOUBLE}, #{largestReceiveSuccessResponseThroughput,jdbcType=DOUBLE},
        #{largestReceiveErrorResponseThroughput,jdbcType=DOUBLE}, #{lastSendRequestTime,jdbcType=TIMESTAMP},
        #{lastReceiveSuccessResponseTime,jdbcType=TIMESTAMP}, #{lastReceiveErrorResponseTime,jdbcType=TIMESTAMP},
        #{averageReceiveSuccessResponseMilliseconds,jdbcType=INTEGER}, #{receiveSuccessRequestTimes,jdbcType=BIGINT},
        #{receiveErrorRequestTimes,jdbcType=BIGINT}, #{sendSuccessResponseTimes,jdbcType=BIGINT},
        #{sendErrorResponseTimes,jdbcType=BIGINT}, #{receiveSuccessRequestThroughput,jdbcType=DOUBLE},
        #{receiveErrorRequestThroughput,jdbcType=DOUBLE}, #{sendSuccessResponseThroughput,jdbcType=DOUBLE},
        #{sendErrorResponseThroughput,jdbcType=DOUBLE}, #{largestReceiveSuccessRequestThroughput,jdbcType=DOUBLE},
        #{largestReceiveErrorRequestThroughput,jdbcType=DOUBLE},
        #{largestSendSuccessResponseThroughput,jdbcType=DOUBLE},
        #{largestSendErrorResponseThroughput,jdbcType=DOUBLE}, #{lastReceiveSuccessRequestTime,jdbcType=TIMESTAMP},
        #{lastReceiveErrorRequestTime,jdbcType=TIMESTAMP}, #{lastSendSuccessResponseTime,jdbcType=TIMESTAMP},
        #{lastSendErrorResponseTime,jdbcType=TIMESTAMP}, #{averageSendSuccessResponseMilliseconds,jdbcType=INTEGER},
        #{logtime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.kongzhonghd.sts.statistics.model.ApiDetailLog">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        insert into tsts_api_performance_detail_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="APIID != null">
                APIID,
            </if>
            <if test="APIKey != null">
                APIKey,
            </if>
            <if test="sendRequestTimes != null">
                sendRequestTimes,
            </if>
            <if test="receiveSuccessResponseTimes != null">
                receiveSuccessResponseTimes,
            </if>
            <if test="receiveErrorResponseTimes != null">
                receiveErrorResponseTimes,
            </if>
            <if test="sendRequestThroughput != null">
                sendRequestThroughput,
            </if>
            <if test="receiveSuccessResponseThroughput != null">
                receiveSuccessResponseThroughput,
            </if>
            <if test="receiveErrorResponseThroughput != null">
                receiveErrorResponseThroughput,
            </if>
            <if test="largestSendRequestThroughput != null">
                largestSendRequestThroughput,
            </if>
            <if test="largestReceiveSuccessResponseThroughput != null">
                largestReceiveSuccessResponseThroughput,
            </if>
            <if test="largestReceiveErrorResponseThroughput != null">
                largestReceiveErrorResponseThroughput,
            </if>
            <if test="lastSendRequestTime != null">
                lastSendRequestTime,
            </if>
            <if test="lastReceiveSuccessResponseTime != null">
                lastReceiveSuccessResponseTime,
            </if>
            <if test="lastReceiveErrorResponseTime != null">
                lastReceiveErrorResponseTime,
            </if>
            <if test="averageReceiveSuccessResponseMilliseconds != null">
                averageReceiveSuccessResponseMilliseconds,
            </if>
            <if test="receiveSuccessRequestTimes != null">
                receiveSuccessRequestTimes,
            </if>
            <if test="receiveErrorRequestTimes != null">
                receiveErrorRequestTimes,
            </if>
            <if test="sendSuccessResponseTimes != null">
                sendSuccessResponseTimes,
            </if>
            <if test="sendErrorResponseTimes != null">
                sendErrorResponseTimes,
            </if>
            <if test="receiveSuccessRequestThroughput != null">
                receiveSuccessRequestThroughput,
            </if>
            <if test="receiveErrorRequestThroughput != null">
                receiveErrorRequestThroughput,
            </if>
            <if test="sendSuccessResponseThroughput != null">
                sendSuccessResponseThroughput,
            </if>
            <if test="sendErrorResponseThroughput != null">
                sendErrorResponseThroughput,
            </if>
            <if test="largestReceiveSuccessRequestThroughput != null">
                largestReceiveSuccessRequestThroughput,
            </if>
            <if test="largestReceiveErrorRequestThroughput != null">
                largestReceiveErrorRequestThroughput,
            </if>
            <if test="largestSendSuccessResponseThroughput != null">
                largestSendSuccessResponseThroughput,
            </if>
            <if test="largestSendErrorResponseThroughput != null">
                largestSendErrorResponseThroughput,
            </if>
            <if test="lastReceiveSuccessRequestTime != null">
                lastReceiveSuccessRequestTime,
            </if>
            <if test="lastReceiveErrorRequestTime != null">
                lastReceiveErrorRequestTime,
            </if>
            <if test="lastSendSuccessResponseTime != null">
                lastSendSuccessResponseTime,
            </if>
            <if test="lastSendErrorResponseTime != null">
                lastSendErrorResponseTime,
            </if>
            <if test="averageSendSuccessResponseMilliseconds != null">
                averageSendSuccessResponseMilliseconds,
            </if>
            <if test="logtime != null">
                logtime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="APIID != null">
                #{APIID,jdbcType=BIGINT},
            </if>
            <if test="APIKey != null">
                #{APIKey,jdbcType=VARCHAR},
            </if>
            <if test="sendRequestTimes != null">
                #{sendRequestTimes,jdbcType=BIGINT},
            </if>
            <if test="receiveSuccessResponseTimes != null">
                #{receiveSuccessResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="receiveErrorResponseTimes != null">
                #{receiveErrorResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="sendRequestThroughput != null">
                #{sendRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="receiveSuccessResponseThroughput != null">
                #{receiveSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="receiveErrorResponseThroughput != null">
                #{receiveErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestSendRequestThroughput != null">
                #{largestSendRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestReceiveSuccessResponseThroughput != null">
                #{largestReceiveSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestReceiveErrorResponseThroughput != null">
                #{largestReceiveErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="lastSendRequestTime != null">
                #{lastSendRequestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastReceiveSuccessResponseTime != null">
                #{lastReceiveSuccessResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastReceiveErrorResponseTime != null">
                #{lastReceiveErrorResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="averageReceiveSuccessResponseMilliseconds != null">
                #{averageReceiveSuccessResponseMilliseconds,jdbcType=INTEGER},
            </if>
            <if test="receiveSuccessRequestTimes != null">
                #{receiveSuccessRequestTimes,jdbcType=BIGINT},
            </if>
            <if test="receiveErrorRequestTimes != null">
                #{receiveErrorRequestTimes,jdbcType=BIGINT},
            </if>
            <if test="sendSuccessResponseTimes != null">
                #{sendSuccessResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="sendErrorResponseTimes != null">
                #{sendErrorResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="receiveSuccessRequestThroughput != null">
                #{receiveSuccessRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="receiveErrorRequestThroughput != null">
                #{receiveErrorRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="sendSuccessResponseThroughput != null">
                #{sendSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="sendErrorResponseThroughput != null">
                #{sendErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestReceiveSuccessRequestThroughput != null">
                #{largestReceiveSuccessRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestReceiveErrorRequestThroughput != null">
                #{largestReceiveErrorRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestSendSuccessResponseThroughput != null">
                #{largestSendSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestSendErrorResponseThroughput != null">
                #{largestSendErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="lastReceiveSuccessRequestTime != null">
                #{lastReceiveSuccessRequestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastReceiveErrorRequestTime != null">
                #{lastReceiveErrorRequestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastSendSuccessResponseTime != null">
                #{lastSendSuccessResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastSendErrorResponseTime != null">
                #{lastSendErrorResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="averageSendSuccessResponseMilliseconds != null">
                #{averageSendSuccessResponseMilliseconds,jdbcType=INTEGER},
            </if>
            <if test="logtime != null">
                #{logtime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.kongzhonghd.sts.statistics.model.ApiDetailLogExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        select count(*) from tsts_api_performance_detail_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        update tsts_api_performance_detail_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.APIID != null">
                APIID = #{record.APIID,jdbcType=BIGINT},
            </if>
            <if test="record.APIKey != null">
                APIKey = #{record.APIKey,jdbcType=VARCHAR},
            </if>
            <if test="record.sendRequestTimes != null">
                sendRequestTimes = #{record.sendRequestTimes,jdbcType=BIGINT},
            </if>
            <if test="record.receiveSuccessResponseTimes != null">
                receiveSuccessResponseTimes = #{record.receiveSuccessResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="record.receiveErrorResponseTimes != null">
                receiveErrorResponseTimes = #{record.receiveErrorResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="record.sendRequestThroughput != null">
                sendRequestThroughput = #{record.sendRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.receiveSuccessResponseThroughput != null">
                receiveSuccessResponseThroughput = #{record.receiveSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.receiveErrorResponseThroughput != null">
                receiveErrorResponseThroughput = #{record.receiveErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.largestSendRequestThroughput != null">
                largestSendRequestThroughput = #{record.largestSendRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.largestReceiveSuccessResponseThroughput != null">
                largestReceiveSuccessResponseThroughput =
                #{record.largestReceiveSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.largestReceiveErrorResponseThroughput != null">
                largestReceiveErrorResponseThroughput = #{record.largestReceiveErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.lastSendRequestTime != null">
                lastSendRequestTime = #{record.lastSendRequestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastReceiveSuccessResponseTime != null">
                lastReceiveSuccessResponseTime = #{record.lastReceiveSuccessResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastReceiveErrorResponseTime != null">
                lastReceiveErrorResponseTime = #{record.lastReceiveErrorResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.averageReceiveSuccessResponseMilliseconds != null">
                averageReceiveSuccessResponseMilliseconds =
                #{record.averageReceiveSuccessResponseMilliseconds,jdbcType=INTEGER},
            </if>
            <if test="record.receiveSuccessRequestTimes != null">
                receiveSuccessRequestTimes = #{record.receiveSuccessRequestTimes,jdbcType=BIGINT},
            </if>
            <if test="record.receiveErrorRequestTimes != null">
                receiveErrorRequestTimes = #{record.receiveErrorRequestTimes,jdbcType=BIGINT},
            </if>
            <if test="record.sendSuccessResponseTimes != null">
                sendSuccessResponseTimes = #{record.sendSuccessResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="record.sendErrorResponseTimes != null">
                sendErrorResponseTimes = #{record.sendErrorResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="record.receiveSuccessRequestThroughput != null">
                receiveSuccessRequestThroughput = #{record.receiveSuccessRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.receiveErrorRequestThroughput != null">
                receiveErrorRequestThroughput = #{record.receiveErrorRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.sendSuccessResponseThroughput != null">
                sendSuccessResponseThroughput = #{record.sendSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.sendErrorResponseThroughput != null">
                sendErrorResponseThroughput = #{record.sendErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.largestReceiveSuccessRequestThroughput != null">
                largestReceiveSuccessRequestThroughput =
                #{record.largestReceiveSuccessRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.largestReceiveErrorRequestThroughput != null">
                largestReceiveErrorRequestThroughput = #{record.largestReceiveErrorRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.largestSendSuccessResponseThroughput != null">
                largestSendSuccessResponseThroughput = #{record.largestSendSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.largestSendErrorResponseThroughput != null">
                largestSendErrorResponseThroughput = #{record.largestSendErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="record.lastReceiveSuccessRequestTime != null">
                lastReceiveSuccessRequestTime = #{record.lastReceiveSuccessRequestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastReceiveErrorRequestTime != null">
                lastReceiveErrorRequestTime = #{record.lastReceiveErrorRequestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastSendSuccessResponseTime != null">
                lastSendSuccessResponseTime = #{record.lastSendSuccessResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastSendErrorResponseTime != null">
                lastSendErrorResponseTime = #{record.lastSendErrorResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.averageSendSuccessResponseMilliseconds != null">
                averageSendSuccessResponseMilliseconds =
                #{record.averageSendSuccessResponseMilliseconds,jdbcType=INTEGER},
            </if>
            <if test="record.logtime != null">
                logtime = #{record.logtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        update tsts_api_performance_detail_log
        set id = #{record.id,jdbcType=BIGINT},
        APIID = #{record.APIID,jdbcType=BIGINT},
        APIKey = #{record.APIKey,jdbcType=VARCHAR},
        sendRequestTimes = #{record.sendRequestTimes,jdbcType=BIGINT},
        receiveSuccessResponseTimes = #{record.receiveSuccessResponseTimes,jdbcType=BIGINT},
        receiveErrorResponseTimes = #{record.receiveErrorResponseTimes,jdbcType=BIGINT},
        sendRequestThroughput = #{record.sendRequestThroughput,jdbcType=DOUBLE},
        receiveSuccessResponseThroughput = #{record.receiveSuccessResponseThroughput,jdbcType=DOUBLE},
        receiveErrorResponseThroughput = #{record.receiveErrorResponseThroughput,jdbcType=DOUBLE},
        largestSendRequestThroughput = #{record.largestSendRequestThroughput,jdbcType=DOUBLE},
        largestReceiveSuccessResponseThroughput = #{record.largestReceiveSuccessResponseThroughput,jdbcType=DOUBLE},
        largestReceiveErrorResponseThroughput = #{record.largestReceiveErrorResponseThroughput,jdbcType=DOUBLE},
        lastSendRequestTime = #{record.lastSendRequestTime,jdbcType=TIMESTAMP},
        lastReceiveSuccessResponseTime = #{record.lastReceiveSuccessResponseTime,jdbcType=TIMESTAMP},
        lastReceiveErrorResponseTime = #{record.lastReceiveErrorResponseTime,jdbcType=TIMESTAMP},
        averageReceiveSuccessResponseMilliseconds =
        #{record.averageReceiveSuccessResponseMilliseconds,jdbcType=INTEGER},
        receiveSuccessRequestTimes = #{record.receiveSuccessRequestTimes,jdbcType=BIGINT},
        receiveErrorRequestTimes = #{record.receiveErrorRequestTimes,jdbcType=BIGINT},
        sendSuccessResponseTimes = #{record.sendSuccessResponseTimes,jdbcType=BIGINT},
        sendErrorResponseTimes = #{record.sendErrorResponseTimes,jdbcType=BIGINT},
        receiveSuccessRequestThroughput = #{record.receiveSuccessRequestThroughput,jdbcType=DOUBLE},
        receiveErrorRequestThroughput = #{record.receiveErrorRequestThroughput,jdbcType=DOUBLE},
        sendSuccessResponseThroughput = #{record.sendSuccessResponseThroughput,jdbcType=DOUBLE},
        sendErrorResponseThroughput = #{record.sendErrorResponseThroughput,jdbcType=DOUBLE},
        largestReceiveSuccessRequestThroughput = #{record.largestReceiveSuccessRequestThroughput,jdbcType=DOUBLE},
        largestReceiveErrorRequestThroughput = #{record.largestReceiveErrorRequestThroughput,jdbcType=DOUBLE},
        largestSendSuccessResponseThroughput = #{record.largestSendSuccessResponseThroughput,jdbcType=DOUBLE},
        largestSendErrorResponseThroughput = #{record.largestSendErrorResponseThroughput,jdbcType=DOUBLE},
        lastReceiveSuccessRequestTime = #{record.lastReceiveSuccessRequestTime,jdbcType=TIMESTAMP},
        lastReceiveErrorRequestTime = #{record.lastReceiveErrorRequestTime,jdbcType=TIMESTAMP},
        lastSendSuccessResponseTime = #{record.lastSendSuccessResponseTime,jdbcType=TIMESTAMP},
        lastSendErrorResponseTime = #{record.lastSendErrorResponseTime,jdbcType=TIMESTAMP},
        averageSendSuccessResponseMilliseconds = #{record.averageSendSuccessResponseMilliseconds,jdbcType=INTEGER},
        logtime = #{record.logtime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.kongzhonghd.sts.statistics.model.ApiDetailLog">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        update tsts_api_performance_detail_log
        <set>
            <if test="APIID != null">
                APIID = #{APIID,jdbcType=BIGINT},
            </if>
            <if test="APIKey != null">
                APIKey = #{APIKey,jdbcType=VARCHAR},
            </if>
            <if test="sendRequestTimes != null">
                sendRequestTimes = #{sendRequestTimes,jdbcType=BIGINT},
            </if>
            <if test="receiveSuccessResponseTimes != null">
                receiveSuccessResponseTimes = #{receiveSuccessResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="receiveErrorResponseTimes != null">
                receiveErrorResponseTimes = #{receiveErrorResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="sendRequestThroughput != null">
                sendRequestThroughput = #{sendRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="receiveSuccessResponseThroughput != null">
                receiveSuccessResponseThroughput = #{receiveSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="receiveErrorResponseThroughput != null">
                receiveErrorResponseThroughput = #{receiveErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestSendRequestThroughput != null">
                largestSendRequestThroughput = #{largestSendRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestReceiveSuccessResponseThroughput != null">
                largestReceiveSuccessResponseThroughput = #{largestReceiveSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestReceiveErrorResponseThroughput != null">
                largestReceiveErrorResponseThroughput = #{largestReceiveErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="lastSendRequestTime != null">
                lastSendRequestTime = #{lastSendRequestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastReceiveSuccessResponseTime != null">
                lastReceiveSuccessResponseTime = #{lastReceiveSuccessResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastReceiveErrorResponseTime != null">
                lastReceiveErrorResponseTime = #{lastReceiveErrorResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="averageReceiveSuccessResponseMilliseconds != null">
                averageReceiveSuccessResponseMilliseconds =
                #{averageReceiveSuccessResponseMilliseconds,jdbcType=INTEGER},
            </if>
            <if test="receiveSuccessRequestTimes != null">
                receiveSuccessRequestTimes = #{receiveSuccessRequestTimes,jdbcType=BIGINT},
            </if>
            <if test="receiveErrorRequestTimes != null">
                receiveErrorRequestTimes = #{receiveErrorRequestTimes,jdbcType=BIGINT},
            </if>
            <if test="sendSuccessResponseTimes != null">
                sendSuccessResponseTimes = #{sendSuccessResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="sendErrorResponseTimes != null">
                sendErrorResponseTimes = #{sendErrorResponseTimes,jdbcType=BIGINT},
            </if>
            <if test="receiveSuccessRequestThroughput != null">
                receiveSuccessRequestThroughput = #{receiveSuccessRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="receiveErrorRequestThroughput != null">
                receiveErrorRequestThroughput = #{receiveErrorRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="sendSuccessResponseThroughput != null">
                sendSuccessResponseThroughput = #{sendSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="sendErrorResponseThroughput != null">
                sendErrorResponseThroughput = #{sendErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestReceiveSuccessRequestThroughput != null">
                largestReceiveSuccessRequestThroughput = #{largestReceiveSuccessRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestReceiveErrorRequestThroughput != null">
                largestReceiveErrorRequestThroughput = #{largestReceiveErrorRequestThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestSendSuccessResponseThroughput != null">
                largestSendSuccessResponseThroughput = #{largestSendSuccessResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="largestSendErrorResponseThroughput != null">
                largestSendErrorResponseThroughput = #{largestSendErrorResponseThroughput,jdbcType=DOUBLE},
            </if>
            <if test="lastReceiveSuccessRequestTime != null">
                lastReceiveSuccessRequestTime = #{lastReceiveSuccessRequestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastReceiveErrorRequestTime != null">
                lastReceiveErrorRequestTime = #{lastReceiveErrorRequestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastSendSuccessResponseTime != null">
                lastSendSuccessResponseTime = #{lastSendSuccessResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastSendErrorResponseTime != null">
                lastSendErrorResponseTime = #{lastSendErrorResponseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="averageSendSuccessResponseMilliseconds != null">
                averageSendSuccessResponseMilliseconds = #{averageSendSuccessResponseMilliseconds,jdbcType=INTEGER},
            </if>
            <if test="logtime != null">
                logtime = #{logtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kongzhonghd.sts.statistics.model.ApiDetailLog">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Aug 08 17:52:21 CST 2013.
        -->
        update tsts_api_performance_detail_log
        set APIID = #{APIID,jdbcType=BIGINT},
        APIKey = #{APIKey,jdbcType=VARCHAR},
        sendRequestTimes = #{sendRequestTimes,jdbcType=BIGINT},
        receiveSuccessResponseTimes = #{receiveSuccessResponseTimes,jdbcType=BIGINT},
        receiveErrorResponseTimes = #{receiveErrorResponseTimes,jdbcType=BIGINT},
        sendRequestThroughput = #{sendRequestThroughput,jdbcType=DOUBLE},
        receiveSuccessResponseThroughput = #{receiveSuccessResponseThroughput,jdbcType=DOUBLE},
        receiveErrorResponseThroughput = #{receiveErrorResponseThroughput,jdbcType=DOUBLE},
        largestSendRequestThroughput = #{largestSendRequestThroughput,jdbcType=DOUBLE},
        largestReceiveSuccessResponseThroughput = #{largestReceiveSuccessResponseThroughput,jdbcType=DOUBLE},
        largestReceiveErrorResponseThroughput = #{largestReceiveErrorResponseThroughput,jdbcType=DOUBLE},
        lastSendRequestTime = #{lastSendRequestTime,jdbcType=TIMESTAMP},
        lastReceiveSuccessResponseTime = #{lastReceiveSuccessResponseTime,jdbcType=TIMESTAMP},
        lastReceiveErrorResponseTime = #{lastReceiveErrorResponseTime,jdbcType=TIMESTAMP},
        averageReceiveSuccessResponseMilliseconds = #{averageReceiveSuccessResponseMilliseconds,jdbcType=INTEGER},
        receiveSuccessRequestTimes = #{receiveSuccessRequestTimes,jdbcType=BIGINT},
        receiveErrorRequestTimes = #{receiveErrorRequestTimes,jdbcType=BIGINT},
        sendSuccessResponseTimes = #{sendSuccessResponseTimes,jdbcType=BIGINT},
        sendErrorResponseTimes = #{sendErrorResponseTimes,jdbcType=BIGINT},
        receiveSuccessRequestThroughput = #{receiveSuccessRequestThroughput,jdbcType=DOUBLE},
        receiveErrorRequestThroughput = #{receiveErrorRequestThroughput,jdbcType=DOUBLE},
        sendSuccessResponseThroughput = #{sendSuccessResponseThroughput,jdbcType=DOUBLE},
        sendErrorResponseThroughput = #{sendErrorResponseThroughput,jdbcType=DOUBLE},
        largestReceiveSuccessRequestThroughput = #{largestReceiveSuccessRequestThroughput,jdbcType=DOUBLE},
        largestReceiveErrorRequestThroughput = #{largestReceiveErrorRequestThroughput,jdbcType=DOUBLE},
        largestSendSuccessResponseThroughput = #{largestSendSuccessResponseThroughput,jdbcType=DOUBLE},
        largestSendErrorResponseThroughput = #{largestSendErrorResponseThroughput,jdbcType=DOUBLE},
        lastReceiveSuccessRequestTime = #{lastReceiveSuccessRequestTime,jdbcType=TIMESTAMP},
        lastReceiveErrorRequestTime = #{lastReceiveErrorRequestTime,jdbcType=TIMESTAMP},
        lastSendSuccessResponseTime = #{lastSendSuccessResponseTime,jdbcType=TIMESTAMP},
        lastSendErrorResponseTime = #{lastSendErrorResponseTime,jdbcType=TIMESTAMP},
        averageSendSuccessResponseMilliseconds = #{averageSendSuccessResponseMilliseconds,jdbcType=INTEGER},
        logtime = #{logtime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>