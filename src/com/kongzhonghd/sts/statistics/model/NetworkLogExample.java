package com.kongzhonghd.sts.statistics.model;

import java.util.*;

public class NetworkLogExample
{
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public NetworkLogExample()
    {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public void setOrderByClause(String orderByClause)
    {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public String getOrderByClause()
    {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public void setDistinct(boolean distinct)
    {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public boolean isDistinct()
    {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public List<Criteria> getOredCriteria()
    {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public void or(Criteria criteria)
    {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public Criteria or()
    {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public Criteria createCriteria()
    {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0)
        {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    protected Criteria createCriteriaInternal()
    {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public void clear()
    {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    protected abstract static class GeneratedCriteria
    {
        protected List<Criterion> criteria;

        protected GeneratedCriteria()
        {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid()
        {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria()
        {
            return criteria;
        }

        public List<Criterion> getCriteria()
        {
            return criteria;
        }

        protected void addCriterion(String condition)
        {
            if (condition == null)
            {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property)
        {
            if (value == null)
            {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property)
        {
            if (value1 == null || value2 == null)
            {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull()
        {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull()
        {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value)
        {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value)
        {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value)
        {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value)
        {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value)
        {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value)
        {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values)
        {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values)
        {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2)
        {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2)
        {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputIsNull()
        {
            addCriterion("ReadBytesThroughput is null");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputIsNotNull()
        {
            addCriterion("ReadBytesThroughput is not null");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputEqualTo(Double value)
        {
            addCriterion("ReadBytesThroughput =", value, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputNotEqualTo(Double value)
        {
            addCriterion("ReadBytesThroughput <>", value, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputGreaterThan(Double value)
        {
            addCriterion("ReadBytesThroughput >", value, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputGreaterThanOrEqualTo(Double value)
        {
            addCriterion("ReadBytesThroughput >=", value, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputLessThan(Double value)
        {
            addCriterion("ReadBytesThroughput <", value, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputLessThanOrEqualTo(Double value)
        {
            addCriterion("ReadBytesThroughput <=", value, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputIn(List<Double> values)
        {
            addCriterion("ReadBytesThroughput in", values, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputNotIn(List<Double> values)
        {
            addCriterion("ReadBytesThroughput not in", values, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputBetween(Double value1, Double value2)
        {
            addCriterion("ReadBytesThroughput between", value1, value2, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesThroughputNotBetween(Double value1, Double value2)
        {
            addCriterion("ReadBytesThroughput not between", value1, value2, "readBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputIsNull()
        {
            addCriterion("WrittenBytesThroughput is null");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputIsNotNull()
        {
            addCriterion("WrittenBytesThroughput is not null");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputEqualTo(Double value)
        {
            addCriterion("WrittenBytesThroughput =", value, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputNotEqualTo(Double value)
        {
            addCriterion("WrittenBytesThroughput <>", value, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputGreaterThan(Double value)
        {
            addCriterion("WrittenBytesThroughput >", value, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputGreaterThanOrEqualTo(Double value)
        {
            addCriterion("WrittenBytesThroughput >=", value, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputLessThan(Double value)
        {
            addCriterion("WrittenBytesThroughput <", value, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputLessThanOrEqualTo(Double value)
        {
            addCriterion("WrittenBytesThroughput <=", value, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputIn(List<Double> values)
        {
            addCriterion("WrittenBytesThroughput in", values, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputNotIn(List<Double> values)
        {
            addCriterion("WrittenBytesThroughput not in", values, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputBetween(Double value1, Double value2)
        {
            addCriterion("WrittenBytesThroughput between", value1, value2, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesThroughputNotBetween(Double value1, Double value2)
        {
            addCriterion("WrittenBytesThroughput not between", value1, value2, "writtenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputIsNull()
        {
            addCriterion("ReadMessagesThroughput is null");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputIsNotNull()
        {
            addCriterion("ReadMessagesThroughput is not null");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputEqualTo(Double value)
        {
            addCriterion("ReadMessagesThroughput =", value, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputNotEqualTo(Double value)
        {
            addCriterion("ReadMessagesThroughput <>", value, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputGreaterThan(Double value)
        {
            addCriterion("ReadMessagesThroughput >", value, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputGreaterThanOrEqualTo(Double value)
        {
            addCriterion("ReadMessagesThroughput >=", value, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputLessThan(Double value)
        {
            addCriterion("ReadMessagesThroughput <", value, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputLessThanOrEqualTo(Double value)
        {
            addCriterion("ReadMessagesThroughput <=", value, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputIn(List<Double> values)
        {
            addCriterion("ReadMessagesThroughput in", values, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputNotIn(List<Double> values)
        {
            addCriterion("ReadMessagesThroughput not in", values, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputBetween(Double value1, Double value2)
        {
            addCriterion("ReadMessagesThroughput between", value1, value2, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadMessagesThroughputNotBetween(Double value1, Double value2)
        {
            addCriterion("ReadMessagesThroughput not between", value1, value2, "readMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputIsNull()
        {
            addCriterion("WrittenMessagesThroughput is null");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputIsNotNull()
        {
            addCriterion("WrittenMessagesThroughput is not null");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputEqualTo(Double value)
        {
            addCriterion("WrittenMessagesThroughput =", value, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputNotEqualTo(Double value)
        {
            addCriterion("WrittenMessagesThroughput <>", value, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputGreaterThan(Double value)
        {
            addCriterion("WrittenMessagesThroughput >", value, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputGreaterThanOrEqualTo(Double value)
        {
            addCriterion("WrittenMessagesThroughput >=", value, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputLessThan(Double value)
        {
            addCriterion("WrittenMessagesThroughput <", value, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputLessThanOrEqualTo(Double value)
        {
            addCriterion("WrittenMessagesThroughput <=", value, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputIn(List<Double> values)
        {
            addCriterion("WrittenMessagesThroughput in", values, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputNotIn(List<Double> values)
        {
            addCriterion("WrittenMessagesThroughput not in", values, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputBetween(Double value1, Double value2)
        {
            addCriterion("WrittenMessagesThroughput between", value1, value2, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesThroughputNotBetween(Double value1, Double value2)
        {
            addCriterion("WrittenMessagesThroughput not between", value1, value2, "writtenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputIsNull()
        {
            addCriterion("LargestReadBytesThroughput is null");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputIsNotNull()
        {
            addCriterion("LargestReadBytesThroughput is not null");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputEqualTo(Double value)
        {
            addCriterion("LargestReadBytesThroughput =", value, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputNotEqualTo(Double value)
        {
            addCriterion("LargestReadBytesThroughput <>", value, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputGreaterThan(Double value)
        {
            addCriterion("LargestReadBytesThroughput >", value, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputGreaterThanOrEqualTo(Double value)
        {
            addCriterion("LargestReadBytesThroughput >=", value, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputLessThan(Double value)
        {
            addCriterion("LargestReadBytesThroughput <", value, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputLessThanOrEqualTo(Double value)
        {
            addCriterion("LargestReadBytesThroughput <=", value, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputIn(List<Double> values)
        {
            addCriterion("LargestReadBytesThroughput in", values, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputNotIn(List<Double> values)
        {
            addCriterion("LargestReadBytesThroughput not in", values, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputBetween(Double value1, Double value2)
        {
            addCriterion("LargestReadBytesThroughput between", value1, value2, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadBytesThroughputNotBetween(Double value1, Double value2)
        {
            addCriterion("LargestReadBytesThroughput not between", value1, value2, "largestReadBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputIsNull()
        {
            addCriterion("LargestWrittenBytesThroughput is null");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputIsNotNull()
        {
            addCriterion("LargestWrittenBytesThroughput is not null");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputEqualTo(Double value)
        {
            addCriterion("LargestWrittenBytesThroughput =", value, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputNotEqualTo(Double value)
        {
            addCriterion("LargestWrittenBytesThroughput <>", value, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputGreaterThan(Double value)
        {
            addCriterion("LargestWrittenBytesThroughput >", value, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputGreaterThanOrEqualTo(Double value)
        {
            addCriterion("LargestWrittenBytesThroughput >=", value, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputLessThan(Double value)
        {
            addCriterion("LargestWrittenBytesThroughput <", value, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputLessThanOrEqualTo(Double value)
        {
            addCriterion("LargestWrittenBytesThroughput <=", value, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputIn(List<Double> values)
        {
            addCriterion("LargestWrittenBytesThroughput in", values, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputNotIn(List<Double> values)
        {
            addCriterion("LargestWrittenBytesThroughput not in", values, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputBetween(Double value1, Double value2)
        {
            addCriterion("LargestWrittenBytesThroughput between", value1, value2, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenBytesThroughputNotBetween(Double value1, Double value2)
        {
            addCriterion("LargestWrittenBytesThroughput not between", value1, value2, "largestWrittenBytesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputIsNull()
        {
            addCriterion("LargestReadMessagesThroughput is null");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputIsNotNull()
        {
            addCriterion("LargestReadMessagesThroughput is not null");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputEqualTo(Double value)
        {
            addCriterion("LargestReadMessagesThroughput =", value, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputNotEqualTo(Double value)
        {
            addCriterion("LargestReadMessagesThroughput <>", value, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputGreaterThan(Double value)
        {
            addCriterion("LargestReadMessagesThroughput >", value, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputGreaterThanOrEqualTo(Double value)
        {
            addCriterion("LargestReadMessagesThroughput >=", value, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputLessThan(Double value)
        {
            addCriterion("LargestReadMessagesThroughput <", value, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputLessThanOrEqualTo(Double value)
        {
            addCriterion("LargestReadMessagesThroughput <=", value, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputIn(List<Double> values)
        {
            addCriterion("LargestReadMessagesThroughput in", values, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputNotIn(List<Double> values)
        {
            addCriterion("LargestReadMessagesThroughput not in", values, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputBetween(Double value1, Double value2)
        {
            addCriterion("LargestReadMessagesThroughput between", value1, value2, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestReadMessagesThroughputNotBetween(Double value1, Double value2)
        {
            addCriterion("LargestReadMessagesThroughput not between", value1, value2, "largestReadMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputIsNull()
        {
            addCriterion("LargestWrittenMessagesThroughput is null");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputIsNotNull()
        {
            addCriterion("LargestWrittenMessagesThroughput is not null");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputEqualTo(Double value)
        {
            addCriterion("LargestWrittenMessagesThroughput =", value, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputNotEqualTo(Double value)
        {
            addCriterion("LargestWrittenMessagesThroughput <>", value, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputGreaterThan(Double value)
        {
            addCriterion("LargestWrittenMessagesThroughput >", value, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputGreaterThanOrEqualTo(Double value)
        {
            addCriterion("LargestWrittenMessagesThroughput >=", value, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputLessThan(Double value)
        {
            addCriterion("LargestWrittenMessagesThroughput <", value, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputLessThanOrEqualTo(Double value)
        {
            addCriterion("LargestWrittenMessagesThroughput <=", value, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputIn(List<Double> values)
        {
            addCriterion("LargestWrittenMessagesThroughput in", values, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputNotIn(List<Double> values)
        {
            addCriterion("LargestWrittenMessagesThroughput not in", values, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputBetween(Double value1, Double value2)
        {
            addCriterion("LargestWrittenMessagesThroughput between", value1, value2, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andLargestWrittenMessagesThroughputNotBetween(Double value1, Double value2)
        {
            addCriterion("LargestWrittenMessagesThroughput not between", value1, value2, "largestWrittenMessagesThroughput");
            return (Criteria) this;
        }

        public Criteria andReadBytesIsNull()
        {
            addCriterion("ReadBytes is null");
            return (Criteria) this;
        }

        public Criteria andReadBytesIsNotNull()
        {
            addCriterion("ReadBytes is not null");
            return (Criteria) this;
        }

        public Criteria andReadBytesEqualTo(Long value)
        {
            addCriterion("ReadBytes =", value, "readBytes");
            return (Criteria) this;
        }

        public Criteria andReadBytesNotEqualTo(Long value)
        {
            addCriterion("ReadBytes <>", value, "readBytes");
            return (Criteria) this;
        }

        public Criteria andReadBytesGreaterThan(Long value)
        {
            addCriterion("ReadBytes >", value, "readBytes");
            return (Criteria) this;
        }

        public Criteria andReadBytesGreaterThanOrEqualTo(Long value)
        {
            addCriterion("ReadBytes >=", value, "readBytes");
            return (Criteria) this;
        }

        public Criteria andReadBytesLessThan(Long value)
        {
            addCriterion("ReadBytes <", value, "readBytes");
            return (Criteria) this;
        }

        public Criteria andReadBytesLessThanOrEqualTo(Long value)
        {
            addCriterion("ReadBytes <=", value, "readBytes");
            return (Criteria) this;
        }

        public Criteria andReadBytesIn(List<Long> values)
        {
            addCriterion("ReadBytes in", values, "readBytes");
            return (Criteria) this;
        }

        public Criteria andReadBytesNotIn(List<Long> values)
        {
            addCriterion("ReadBytes not in", values, "readBytes");
            return (Criteria) this;
        }

        public Criteria andReadBytesBetween(Long value1, Long value2)
        {
            addCriterion("ReadBytes between", value1, value2, "readBytes");
            return (Criteria) this;
        }

        public Criteria andReadBytesNotBetween(Long value1, Long value2)
        {
            addCriterion("ReadBytes not between", value1, value2, "readBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesIsNull()
        {
            addCriterion("WrittenBytes is null");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesIsNotNull()
        {
            addCriterion("WrittenBytes is not null");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesEqualTo(Long value)
        {
            addCriterion("WrittenBytes =", value, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesNotEqualTo(Long value)
        {
            addCriterion("WrittenBytes <>", value, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesGreaterThan(Long value)
        {
            addCriterion("WrittenBytes >", value, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesGreaterThanOrEqualTo(Long value)
        {
            addCriterion("WrittenBytes >=", value, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesLessThan(Long value)
        {
            addCriterion("WrittenBytes <", value, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesLessThanOrEqualTo(Long value)
        {
            addCriterion("WrittenBytes <=", value, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesIn(List<Long> values)
        {
            addCriterion("WrittenBytes in", values, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesNotIn(List<Long> values)
        {
            addCriterion("WrittenBytes not in", values, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesBetween(Long value1, Long value2)
        {
            addCriterion("WrittenBytes between", value1, value2, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andWrittenBytesNotBetween(Long value1, Long value2)
        {
            addCriterion("WrittenBytes not between", value1, value2, "writtenBytes");
            return (Criteria) this;
        }

        public Criteria andReadMessagesIsNull()
        {
            addCriterion("ReadMessages is null");
            return (Criteria) this;
        }

        public Criteria andReadMessagesIsNotNull()
        {
            addCriterion("ReadMessages is not null");
            return (Criteria) this;
        }

        public Criteria andReadMessagesEqualTo(Long value)
        {
            addCriterion("ReadMessages =", value, "readMessages");
            return (Criteria) this;
        }

        public Criteria andReadMessagesNotEqualTo(Long value)
        {
            addCriterion("ReadMessages <>", value, "readMessages");
            return (Criteria) this;
        }

        public Criteria andReadMessagesGreaterThan(Long value)
        {
            addCriterion("ReadMessages >", value, "readMessages");
            return (Criteria) this;
        }

        public Criteria andReadMessagesGreaterThanOrEqualTo(Long value)
        {
            addCriterion("ReadMessages >=", value, "readMessages");
            return (Criteria) this;
        }

        public Criteria andReadMessagesLessThan(Long value)
        {
            addCriterion("ReadMessages <", value, "readMessages");
            return (Criteria) this;
        }

        public Criteria andReadMessagesLessThanOrEqualTo(Long value)
        {
            addCriterion("ReadMessages <=", value, "readMessages");
            return (Criteria) this;
        }

        public Criteria andReadMessagesIn(List<Long> values)
        {
            addCriterion("ReadMessages in", values, "readMessages");
            return (Criteria) this;
        }

        public Criteria andReadMessagesNotIn(List<Long> values)
        {
            addCriterion("ReadMessages not in", values, "readMessages");
            return (Criteria) this;
        }

        public Criteria andReadMessagesBetween(Long value1, Long value2)
        {
            addCriterion("ReadMessages between", value1, value2, "readMessages");
            return (Criteria) this;
        }

        public Criteria andReadMessagesNotBetween(Long value1, Long value2)
        {
            addCriterion("ReadMessages not between", value1, value2, "readMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesIsNull()
        {
            addCriterion("WrittenMessages is null");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesIsNotNull()
        {
            addCriterion("WrittenMessages is not null");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesEqualTo(Long value)
        {
            addCriterion("WrittenMessages =", value, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesNotEqualTo(Long value)
        {
            addCriterion("WrittenMessages <>", value, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesGreaterThan(Long value)
        {
            addCriterion("WrittenMessages >", value, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesGreaterThanOrEqualTo(Long value)
        {
            addCriterion("WrittenMessages >=", value, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesLessThan(Long value)
        {
            addCriterion("WrittenMessages <", value, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesLessThanOrEqualTo(Long value)
        {
            addCriterion("WrittenMessages <=", value, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesIn(List<Long> values)
        {
            addCriterion("WrittenMessages in", values, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesNotIn(List<Long> values)
        {
            addCriterion("WrittenMessages not in", values, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesBetween(Long value1, Long value2)
        {
            addCriterion("WrittenMessages between", value1, value2, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andWrittenMessagesNotBetween(Long value1, Long value2)
        {
            addCriterion("WrittenMessages not between", value1, value2, "writtenMessages");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeIsNull()
        {
            addCriterion("LastReadTime is null");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeIsNotNull()
        {
            addCriterion("LastReadTime is not null");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeEqualTo(Date value)
        {
            addCriterion("LastReadTime =", value, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeNotEqualTo(Date value)
        {
            addCriterion("LastReadTime <>", value, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeGreaterThan(Date value)
        {
            addCriterion("LastReadTime >", value, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeGreaterThanOrEqualTo(Date value)
        {
            addCriterion("LastReadTime >=", value, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeLessThan(Date value)
        {
            addCriterion("LastReadTime <", value, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeLessThanOrEqualTo(Date value)
        {
            addCriterion("LastReadTime <=", value, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeIn(List<Date> values)
        {
            addCriterion("LastReadTime in", values, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeNotIn(List<Date> values)
        {
            addCriterion("LastReadTime not in", values, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeBetween(Date value1, Date value2)
        {
            addCriterion("LastReadTime between", value1, value2, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastReadTimeNotBetween(Date value1, Date value2)
        {
            addCriterion("LastReadTime not between", value1, value2, "lastReadTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeIsNull()
        {
            addCriterion("LastWriteTime is null");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeIsNotNull()
        {
            addCriterion("LastWriteTime is not null");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeEqualTo(Date value)
        {
            addCriterion("LastWriteTime =", value, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeNotEqualTo(Date value)
        {
            addCriterion("LastWriteTime <>", value, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeGreaterThan(Date value)
        {
            addCriterion("LastWriteTime >", value, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeGreaterThanOrEqualTo(Date value)
        {
            addCriterion("LastWriteTime >=", value, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeLessThan(Date value)
        {
            addCriterion("LastWriteTime <", value, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeLessThanOrEqualTo(Date value)
        {
            addCriterion("LastWriteTime <=", value, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeIn(List<Date> values)
        {
            addCriterion("LastWriteTime in", values, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeNotIn(List<Date> values)
        {
            addCriterion("LastWriteTime not in", values, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeBetween(Date value1, Date value2)
        {
            addCriterion("LastWriteTime between", value1, value2, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andLastWriteTimeNotBetween(Date value1, Date value2)
        {
            addCriterion("LastWriteTime not between", value1, value2, "lastWriteTime");
            return (Criteria) this;
        }

        public Criteria andIPAddrIsNull()
        {
            addCriterion("IPAddr is null");
            return (Criteria) this;
        }

        public Criteria andIPAddrIsNotNull()
        {
            addCriterion("IPAddr is not null");
            return (Criteria) this;
        }

        public Criteria andIPAddrEqualTo(String value)
        {
            addCriterion("IPAddr =", value, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrNotEqualTo(String value)
        {
            addCriterion("IPAddr <>", value, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrGreaterThan(String value)
        {
            addCriterion("IPAddr >", value, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrGreaterThanOrEqualTo(String value)
        {
            addCriterion("IPAddr >=", value, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrLessThan(String value)
        {
            addCriterion("IPAddr <", value, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrLessThanOrEqualTo(String value)
        {
            addCriterion("IPAddr <=", value, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrLike(String value)
        {
            addCriterion("IPAddr like", value, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrNotLike(String value)
        {
            addCriterion("IPAddr not like", value, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrIn(List<String> values)
        {
            addCriterion("IPAddr in", values, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrNotIn(List<String> values)
        {
            addCriterion("IPAddr not in", values, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrBetween(String value1, String value2)
        {
            addCriterion("IPAddr between", value1, value2, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andIPAddrNotBetween(String value1, String value2)
        {
            addCriterion("IPAddr not between", value1, value2, "IPAddr");
            return (Criteria) this;
        }

        public Criteria andLogtimeIsNull()
        {
            addCriterion("logtime is null");
            return (Criteria) this;
        }

        public Criteria andLogtimeIsNotNull()
        {
            addCriterion("logtime is not null");
            return (Criteria) this;
        }

        public Criteria andLogtimeEqualTo(Date value)
        {
            addCriterion("logtime =", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeNotEqualTo(Date value)
        {
            addCriterion("logtime <>", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeGreaterThan(Date value)
        {
            addCriterion("logtime >", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeGreaterThanOrEqualTo(Date value)
        {
            addCriterion("logtime >=", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeLessThan(Date value)
        {
            addCriterion("logtime <", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeLessThanOrEqualTo(Date value)
        {
            addCriterion("logtime <=", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeIn(List<Date> values)
        {
            addCriterion("logtime in", values, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeNotIn(List<Date> values)
        {
            addCriterion("logtime not in", values, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeBetween(Date value1, Date value2)
        {
            addCriterion("logtime between", value1, value2, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeNotBetween(Date value1, Date value2)
        {
            addCriterion("logtime not between", value1, value2, "logtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 08 17:52:21 CST 2013
     */
    public static class Criteria extends GeneratedCriteria
    {

        protected Criteria()
        {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tsts_network_performance_log
     *
     * @mbggenerated Thu Aug 08 17:52:21 CST 2013
     */
    public static class Criterion
    {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition()
        {
            return condition;
        }

        public Object getValue()
        {
            return value;
        }

        public Object getSecondValue()
        {
            return secondValue;
        }

        public boolean isNoValue()
        {
            return noValue;
        }

        public boolean isSingleValue()
        {
            return singleValue;
        }

        public boolean isBetweenValue()
        {
            return betweenValue;
        }

        public boolean isListValue()
        {
            return listValue;
        }

        public String getTypeHandler()
        {
            return typeHandler;
        }

        protected Criterion(String condition)
        {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler)
        {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>)
            {
                this.listValue = true;
            }
            else
            {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value)
        {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
        {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue)
        {
            this(condition, value, secondValue, null);
        }
    }
}