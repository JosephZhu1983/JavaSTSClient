package com.kongzhonghd.sts.statistics.model;

import java.util.*;

public class TstsThreadpoolPerformanceLogExample
{
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public TstsThreadpoolPerformanceLogExample()
    {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public void setOrderByClause(String orderByClause)
    {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public String getOrderByClause()
    {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public void setDistinct(boolean distinct)
    {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public boolean isDistinct()
    {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public List<Criteria> getOredCriteria()
    {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public void or(Criteria criteria)
    {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public Criteria or()
    {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public Criteria createCriteria()
    {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0)
        {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    protected Criteria createCriteriaInternal()
    {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public void clear()
    {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    protected abstract static class GeneratedCriteria
    {
        protected List<Criterion> criteria;

        protected GeneratedCriteria()
        {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid()
        {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria()
        {
            return criteria;
        }

        public List<Criterion> getCriteria()
        {
            return criteria;
        }

        protected void addCriterion(String condition)
        {
            if (condition == null)
            {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property)
        {
            if (value == null)
            {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property)
        {
            if (value1 == null || value2 == null)
            {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull()
        {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull()
        {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value)
        {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value)
        {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value)
        {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value)
        {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value)
        {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value)
        {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values)
        {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values)
        {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2)
        {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2)
        {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull()
        {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull()
        {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value)
        {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value)
        {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value)
        {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value)
        {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value)
        {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value)
        {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value)
        {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value)
        {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values)
        {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values)
        {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2)
        {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2)
        {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeIsNull()
        {
            addCriterion("corePoolSize is null");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeIsNotNull()
        {
            addCriterion("corePoolSize is not null");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeEqualTo(Integer value)
        {
            addCriterion("corePoolSize =", value, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeNotEqualTo(Integer value)
        {
            addCriterion("corePoolSize <>", value, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeGreaterThan(Integer value)
        {
            addCriterion("corePoolSize >", value, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeGreaterThanOrEqualTo(Integer value)
        {
            addCriterion("corePoolSize >=", value, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeLessThan(Integer value)
        {
            addCriterion("corePoolSize <", value, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeLessThanOrEqualTo(Integer value)
        {
            addCriterion("corePoolSize <=", value, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeIn(List<Integer> values)
        {
            addCriterion("corePoolSize in", values, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeNotIn(List<Integer> values)
        {
            addCriterion("corePoolSize not in", values, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeBetween(Integer value1, Integer value2)
        {
            addCriterion("corePoolSize between", value1, value2, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andCorepoolsizeNotBetween(Integer value1, Integer value2)
        {
            addCriterion("corePoolSize not between", value1, value2, "corepoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeIsNull()
        {
            addCriterion("maximumPoolSize is null");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeIsNotNull()
        {
            addCriterion("maximumPoolSize is not null");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeEqualTo(Integer value)
        {
            addCriterion("maximumPoolSize =", value, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeNotEqualTo(Integer value)
        {
            addCriterion("maximumPoolSize <>", value, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeGreaterThan(Integer value)
        {
            addCriterion("maximumPoolSize >", value, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeGreaterThanOrEqualTo(Integer value)
        {
            addCriterion("maximumPoolSize >=", value, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeLessThan(Integer value)
        {
            addCriterion("maximumPoolSize <", value, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeLessThanOrEqualTo(Integer value)
        {
            addCriterion("maximumPoolSize <=", value, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeIn(List<Integer> values)
        {
            addCriterion("maximumPoolSize in", values, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeNotIn(List<Integer> values)
        {
            addCriterion("maximumPoolSize not in", values, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeBetween(Integer value1, Integer value2)
        {
            addCriterion("maximumPoolSize between", value1, value2, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andMaximumpoolsizeNotBetween(Integer value1, Integer value2)
        {
            addCriterion("maximumPoolSize not between", value1, value2, "maximumpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeIsNull()
        {
            addCriterion("largestPoolSize is null");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeIsNotNull()
        {
            addCriterion("largestPoolSize is not null");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeEqualTo(Integer value)
        {
            addCriterion("largestPoolSize =", value, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeNotEqualTo(Integer value)
        {
            addCriterion("largestPoolSize <>", value, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeGreaterThan(Integer value)
        {
            addCriterion("largestPoolSize >", value, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeGreaterThanOrEqualTo(Integer value)
        {
            addCriterion("largestPoolSize >=", value, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeLessThan(Integer value)
        {
            addCriterion("largestPoolSize <", value, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeLessThanOrEqualTo(Integer value)
        {
            addCriterion("largestPoolSize <=", value, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeIn(List<Integer> values)
        {
            addCriterion("largestPoolSize in", values, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeNotIn(List<Integer> values)
        {
            addCriterion("largestPoolSize not in", values, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeBetween(Integer value1, Integer value2)
        {
            addCriterion("largestPoolSize between", value1, value2, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andLargestpoolsizeNotBetween(Integer value1, Integer value2)
        {
            addCriterion("largestPoolSize not between", value1, value2, "largestpoolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeIsNull()
        {
            addCriterion("poolSize is null");
            return (Criteria) this;
        }

        public Criteria andPoolsizeIsNotNull()
        {
            addCriterion("poolSize is not null");
            return (Criteria) this;
        }

        public Criteria andPoolsizeEqualTo(Integer value)
        {
            addCriterion("poolSize =", value, "poolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeNotEqualTo(Integer value)
        {
            addCriterion("poolSize <>", value, "poolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeGreaterThan(Integer value)
        {
            addCriterion("poolSize >", value, "poolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeGreaterThanOrEqualTo(Integer value)
        {
            addCriterion("poolSize >=", value, "poolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeLessThan(Integer value)
        {
            addCriterion("poolSize <", value, "poolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeLessThanOrEqualTo(Integer value)
        {
            addCriterion("poolSize <=", value, "poolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeIn(List<Integer> values)
        {
            addCriterion("poolSize in", values, "poolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeNotIn(List<Integer> values)
        {
            addCriterion("poolSize not in", values, "poolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeBetween(Integer value1, Integer value2)
        {
            addCriterion("poolSize between", value1, value2, "poolsize");
            return (Criteria) this;
        }

        public Criteria andPoolsizeNotBetween(Integer value1, Integer value2)
        {
            addCriterion("poolSize not between", value1, value2, "poolsize");
            return (Criteria) this;
        }

        public Criteria andActivecountIsNull()
        {
            addCriterion("activeCount is null");
            return (Criteria) this;
        }

        public Criteria andActivecountIsNotNull()
        {
            addCriterion("activeCount is not null");
            return (Criteria) this;
        }

        public Criteria andActivecountEqualTo(Integer value)
        {
            addCriterion("activeCount =", value, "activecount");
            return (Criteria) this;
        }

        public Criteria andActivecountNotEqualTo(Integer value)
        {
            addCriterion("activeCount <>", value, "activecount");
            return (Criteria) this;
        }

        public Criteria andActivecountGreaterThan(Integer value)
        {
            addCriterion("activeCount >", value, "activecount");
            return (Criteria) this;
        }

        public Criteria andActivecountGreaterThanOrEqualTo(Integer value)
        {
            addCriterion("activeCount >=", value, "activecount");
            return (Criteria) this;
        }

        public Criteria andActivecountLessThan(Integer value)
        {
            addCriterion("activeCount <", value, "activecount");
            return (Criteria) this;
        }

        public Criteria andActivecountLessThanOrEqualTo(Integer value)
        {
            addCriterion("activeCount <=", value, "activecount");
            return (Criteria) this;
        }

        public Criteria andActivecountIn(List<Integer> values)
        {
            addCriterion("activeCount in", values, "activecount");
            return (Criteria) this;
        }

        public Criteria andActivecountNotIn(List<Integer> values)
        {
            addCriterion("activeCount not in", values, "activecount");
            return (Criteria) this;
        }

        public Criteria andActivecountBetween(Integer value1, Integer value2)
        {
            addCriterion("activeCount between", value1, value2, "activecount");
            return (Criteria) this;
        }

        public Criteria andActivecountNotBetween(Integer value1, Integer value2)
        {
            addCriterion("activeCount not between", value1, value2, "activecount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountIsNull()
        {
            addCriterion("completedTaskCount is null");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountIsNotNull()
        {
            addCriterion("completedTaskCount is not null");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountEqualTo(Long value)
        {
            addCriterion("completedTaskCount =", value, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountNotEqualTo(Long value)
        {
            addCriterion("completedTaskCount <>", value, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountGreaterThan(Long value)
        {
            addCriterion("completedTaskCount >", value, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountGreaterThanOrEqualTo(Long value)
        {
            addCriterion("completedTaskCount >=", value, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountLessThan(Long value)
        {
            addCriterion("completedTaskCount <", value, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountLessThanOrEqualTo(Long value)
        {
            addCriterion("completedTaskCount <=", value, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountIn(List<Long> values)
        {
            addCriterion("completedTaskCount in", values, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountNotIn(List<Long> values)
        {
            addCriterion("completedTaskCount not in", values, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountBetween(Long value1, Long value2)
        {
            addCriterion("completedTaskCount between", value1, value2, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andCompletedtaskcountNotBetween(Long value1, Long value2)
        {
            addCriterion("completedTaskCount not between", value1, value2, "completedtaskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountIsNull()
        {
            addCriterion("taskCount is null");
            return (Criteria) this;
        }

        public Criteria andTaskcountIsNotNull()
        {
            addCriterion("taskCount is not null");
            return (Criteria) this;
        }

        public Criteria andTaskcountEqualTo(Long value)
        {
            addCriterion("taskCount =", value, "taskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountNotEqualTo(Long value)
        {
            addCriterion("taskCount <>", value, "taskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountGreaterThan(Long value)
        {
            addCriterion("taskCount >", value, "taskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountGreaterThanOrEqualTo(Long value)
        {
            addCriterion("taskCount >=", value, "taskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountLessThan(Long value)
        {
            addCriterion("taskCount <", value, "taskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountLessThanOrEqualTo(Long value)
        {
            addCriterion("taskCount <=", value, "taskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountIn(List<Long> values)
        {
            addCriterion("taskCount in", values, "taskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountNotIn(List<Long> values)
        {
            addCriterion("taskCount not in", values, "taskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountBetween(Long value1, Long value2)
        {
            addCriterion("taskCount between", value1, value2, "taskcount");
            return (Criteria) this;
        }

        public Criteria andTaskcountNotBetween(Long value1, Long value2)
        {
            addCriterion("taskCount not between", value1, value2, "taskcount");
            return (Criteria) this;
        }

        public Criteria andIpaddrIsNull()
        {
            addCriterion("IPAddr is null");
            return (Criteria) this;
        }

        public Criteria andIpaddrIsNotNull()
        {
            addCriterion("IPAddr is not null");
            return (Criteria) this;
        }

        public Criteria andIpaddrEqualTo(String value)
        {
            addCriterion("IPAddr =", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrNotEqualTo(String value)
        {
            addCriterion("IPAddr <>", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrGreaterThan(String value)
        {
            addCriterion("IPAddr >", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrGreaterThanOrEqualTo(String value)
        {
            addCriterion("IPAddr >=", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrLessThan(String value)
        {
            addCriterion("IPAddr <", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrLessThanOrEqualTo(String value)
        {
            addCriterion("IPAddr <=", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrLike(String value)
        {
            addCriterion("IPAddr like", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrNotLike(String value)
        {
            addCriterion("IPAddr not like", value, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrIn(List<String> values)
        {
            addCriterion("IPAddr in", values, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrNotIn(List<String> values)
        {
            addCriterion("IPAddr not in", values, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrBetween(String value1, String value2)
        {
            addCriterion("IPAddr between", value1, value2, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andIpaddrNotBetween(String value1, String value2)
        {
            addCriterion("IPAddr not between", value1, value2, "ipaddr");
            return (Criteria) this;
        }

        public Criteria andLogtimeIsNull()
        {
            addCriterion("logtime is null");
            return (Criteria) this;
        }

        public Criteria andLogtimeIsNotNull()
        {
            addCriterion("logtime is not null");
            return (Criteria) this;
        }

        public Criteria andLogtimeEqualTo(Date value)
        {
            addCriterion("logtime =", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeNotEqualTo(Date value)
        {
            addCriterion("logtime <>", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeGreaterThan(Date value)
        {
            addCriterion("logtime >", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeGreaterThanOrEqualTo(Date value)
        {
            addCriterion("logtime >=", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeLessThan(Date value)
        {
            addCriterion("logtime <", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeLessThanOrEqualTo(Date value)
        {
            addCriterion("logtime <=", value, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeIn(List<Date> values)
        {
            addCriterion("logtime in", values, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeNotIn(List<Date> values)
        {
            addCriterion("logtime not in", values, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeBetween(Date value1, Date value2)
        {
            addCriterion("logtime between", value1, value2, "logtime");
            return (Criteria) this;
        }

        public Criteria andLogtimeNotBetween(Date value1, Date value2)
        {
            addCriterion("logtime not between", value1, value2, "logtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated do_not_delete_during_merge Wed Aug 28 16:19:38 CST 2013
     */
    public static class Criteria extends GeneratedCriteria
    {

        protected Criteria()
        {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tsts_threadPool_performance_log
     *
     * @mbggenerated Wed Aug 28 16:19:38 CST 2013
     */
    public static class Criterion
    {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition()
        {
            return condition;
        }

        public Object getValue()
        {
            return value;
        }

        public Object getSecondValue()
        {
            return secondValue;
        }

        public boolean isNoValue()
        {
            return noValue;
        }

        public boolean isSingleValue()
        {
            return singleValue;
        }

        public boolean isBetweenValue()
        {
            return betweenValue;
        }

        public boolean isListValue()
        {
            return listValue;
        }

        public String getTypeHandler()
        {
            return typeHandler;
        }

        protected Criterion(String condition)
        {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler)
        {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>)
            {
                this.listValue = true;
            }
            else
            {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value)
        {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
        {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue)
        {
            this(condition, value, secondValue, null);
        }
    }
}